classdef Team < ebrains.collaboratory.BaseClient
    % Team No description provided
    %
    % Team Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % Team Methods:
    %
    %   Team - Constructor
    %   addTeamGroup - Add a group to this collab
    %   addTeamUnit - Add a unit in the collab team along with the role specified
    %   addUser - Add a user in the collab team along with role specified
    %   getMembershipsByRole - Get a list of users, units and groups on the collab team with the given role
    %   getTeamGroupsByRole - Get a list of groups which have been added to the collab team
    %   getUnitsByRole - Get a list of units that belong to the collab&#39;&#39;s team
    %   getUsersByRole - Get a list of users on the collab team that has the given role
    %   removeTeamGroup - Remove a group from this collab
    %   removeTeamUnit - Remove a unit from a collab
    %   removeTeamUser - Remove a user from a collab
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, ebrains.collaboratory.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: 1.0
    % MATLAB Generator for OpenAPI version: 1.0.9
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = Team(options)
            % Team Constructor, creates a Team instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'ebrains.collaboratory.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = ebrains.collaboratory.api.Team();
            %
            %   % Create a client for alternative server/base URI
            %   client = ebrains.collaboratory.api.Team("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = ebrains.collaboratory.api.Team("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = ebrains.collaboratory.api.Team("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?ebrains.collaboratory.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@ebrains.collaboratory.BaseClient(args{:})
        end

        function [code, result, response] = addTeamGroup(obj, collabId, role, groupName)
            % addTeamGroup Add a group to this collab
            % Add a group in the collab team along with the role specified
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %   groupName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
              groupName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addTeamGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addTeamGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addTeamGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addTeamGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addTeamGroup method

        function [code, result, response] = addTeamUnit(obj, collabId, role, unitId)
            % addTeamUnit Add a unit in the collab team along with the role specified
            % Add a unit in the collab team along with the role specified
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   400: The specified Unit does not exist.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Unit not found
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addTeamUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addTeamUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addTeamUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addTeamUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addTeamUnit method

        function [code, result, response] = addUser(obj, collabId, role, username)
            % addUser Add a user in the collab team along with role specified
            % Add a user in the collab team along with the role specified
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   400: The specified user does not exist.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Collab not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addUser", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addUser", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addUser:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addUser",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addUser method

        function [code, result, response] = getMembershipsByRole(obj, collabId, role)
            % getMembershipsByRole Get a list of users, units and groups on the collab team with the given role
            % Get a list of users, units and groups for a collab, only returns users/units/groups with the given role
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   404: Collab not found.
            %
            % Returns: Membership
            %
            % See Also: ebrains.collaboratory.models.Membership

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getMembershipsByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getMembershipsByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getMembershipsByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getMembershipsByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Membership(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getMembershipsByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getMembershipsByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getMembershipsByRole method

        function [code, result, response] = getTeamGroupsByRole(obj, collabId, role)
            % getTeamGroupsByRole Get a list of groups which have been added to the collab team
            % Get a list of groups which have been added to the collab team
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   404: Collab not found.
            %
            % Returns: Array of Group
            %
            % See Also: ebrains.collaboratory.models.Group

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getTeamGroupsByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getTeamGroupsByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/groups";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getTeamGroupsByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getTeamGroupsByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Group(response.Body.Data);
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getTeamGroupsByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getTeamGroupsByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getTeamGroupsByRole method

        function [code, result, response] = getUnitsByRole(obj, collabId, role)
            % getUnitsByRole Get a list of units that belong to the collab''s team
            % Get a list of units that belong to the collab''s team
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   404: Collab not found.
            %
            % Returns: Array of Unit
            %
            % See Also: ebrains.collaboratory.models.Unit

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUnitsByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUnitsByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/units";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUnitsByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUnitsByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Unit(response.Body.Data);
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUnitsByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUnitsByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUnitsByRole method

        function [code, result, response] = getUsersByRole(obj, collabId, role)
            % getUsersByRole Get a list of users on the collab team that has the given role
            % Get a list of users for the collab, only returns users with the specified role
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   404: Collab not found.
            %
            % Returns: Array of CollabUser
            %
            % See Also: ebrains.collaboratory.models.CollabUser

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUsersByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUsersByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/users";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUsersByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUsersByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabUser(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUsersByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUsersByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUsersByRole method

        function [code, result, response] = removeTeamGroup(obj, collabId, role, groupName)
            % removeTeamGroup Remove a group from this collab
            % Remove a group from this collab by removing its roles
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %   groupName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
              groupName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeTeamGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeTeamGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeTeamGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeTeamGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeTeamGroup method

        function [code, result, response] = removeTeamUnit(obj, collabId, role, unitId)
            % removeTeamUnit Remove a unit from a collab
            % Remove a unit from a collab by deleting its collab roles
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   400: The specified Unit does not exist.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Unit not found
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeTeamUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeTeamUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeTeamUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeTeamUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeTeamUnit method

        function [code, result, response] = removeTeamUser(obj, collabId, role, username)
            % removeTeamUser Remove a user from a collab
            % Remove a user from a collab by deleting all their collab roles
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   400: The specified user does not exist.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Collab not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Team
              collabId string
              role string
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/team/{role}/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeTeamUser", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeTeamUser", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeTeamUser:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeTeamUser",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeTeamUser method

    end %methods
end %class


