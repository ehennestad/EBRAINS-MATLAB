classdef SwiftApiResponse < ebrains.dataproxy.JSONMapper
% SwiftApiResponse No description provided
% 
% SwiftApiResponse Properties:
%   objects - type: array of Objects_inner
%   container - type: string
%   prefix - type: string
%   delimiter - type: string
%   marker - type: string
%   limit - type: int32

% This file is automatically generated using OpenAPI
% Specification version: 1.0.0
% MATLAB Generator for OpenAPI version: 1.0.9


    % Class properties
    properties
        % objects - type: array of Objects_inner
        objects ebrains.dataproxy.models.Objects_inner { ebrains.dataproxy.JSONMapper.fieldName(objects,"objects"), ebrains.dataproxy.JSONMapper.JSONArray }
        % container - type: string
        container string { ebrains.dataproxy.JSONMapper.fieldName(container,"container") }
        % prefix - type: string
        prefix string { ebrains.dataproxy.JSONMapper.fieldName(prefix,"prefix") }
        % delimiter - type: string
        delimiter string { ebrains.dataproxy.JSONMapper.fieldName(delimiter,"delimiter") }
        % marker - type: string
        marker string { ebrains.dataproxy.JSONMapper.fieldName(marker,"marker") }
        % limit - type: int32
        limit int32 { ebrains.dataproxy.JSONMapper.fieldName(limit,"limit") }
    end

    % Class methods
    methods
        % Constructor
        function obj = SwiftApiResponse(s,inputs)
            % To allow proper nesting of object, derived objects must
            % call the JSONMapper constructor from their constructor. This 
            % also allows objects to be instantiated with Name-Value pairs
            % as inputs to set properties to specified values.
            arguments
                s { ebrains.dataproxy.JSONMapper.ConstructorArgument } = []
                inputs.?ebrains.dataproxy.models.SwiftApiResponse
            end
            obj@ebrains.dataproxy.JSONMapper(s,inputs);
        end
    end %methods
end %class

