classdef Group < ebrains.collaboratory.BaseClient
    % Group No description provided
    %
    % Group Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % Group Methods:
    %
    %   Group - Constructor
    %   addGroup - Assign a group to this group
    %   addUnitInGroup - Add a unit to the group
    %   addUserInGroup - Add a user in the given group
    %   contactGroupAdmin - Send an email to a group&#39;&#39;s administrators
    %   createGroup - Create a group
    %   deleteGroup - Delete a group
    %   getGroup - Get a group by its name
    %   getGroupMembershipsByRole - List the users, units and groups in the specified role and Group
    %   getGroupUnitsByRole - List the units in the specified role and Group
    %   getGroupUsersByRole - List the users in the specified role and Group
    %   getGroupsByRole - List the groups in the specified role and Group
    %   removeGroup - Remove a group from this group
    %   removeUnitFromGroup - Remove a unit from the group
    %   removeUserFromGroup - Remove a user from a group
    %   searchGroups - Search groups by multiple criteria
    %   updateGroup - Update a group
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, ebrains.collaboratory.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: 1.0
    % MATLAB Generator for OpenAPI version: 1.0.9
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = Group(options)
            % Group Constructor, creates a Group instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'ebrains.collaboratory.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = ebrains.collaboratory.api.Group();
            %
            %   % Create a client for alternative server/base URI
            %   client = ebrains.collaboratory.api.Group("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = ebrains.collaboratory.api.Group("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = ebrains.collaboratory.api.Group("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?ebrains.collaboratory.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@ebrains.collaboratory.BaseClient(args{:})
        end

        function [code, result, response] = addGroup(obj, groupName, role, groupToAssignName)
            % addGroup Assign a group to this group
            % A Group will be added to the membership of a Group, under a specified role
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %   groupToAssignName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   403: You must be an administrator of this group.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
              groupToAssignName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/groups/{groupToAssignName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "groupToAssignName" +"}") = groupToAssignName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addGroup method

        function [code, result, response] = addUnitInGroup(obj, groupName, role, unitId)
            % addUnitInGroup Add a unit to the group
            % Add a unit in the group with the role specified
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   400: Incorrect parameters.
            %   401: Login required.
            %   403: You must be an administrator of this group.
            %   404: Unit not found
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addUnitInGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addUnitInGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addUnitInGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addUnitInGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addUnitInGroup method

        function [code, result, response] = addUserInGroup(obj, groupName, role, username)
            % addUserInGroup Add a user in the given group
            % Add a user in the group with the role specified
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   400: Incorrect parameters.
            %   401: Login required.
            %   403: You must be an administrator of this group.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addUserInGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addUserInGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addUserInGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addUserInGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addUserInGroup method

        function [code, result, response] = contactGroupAdmin(obj, groupName, optionals)
            % contactGroupAdmin Send an email to a group''s administrators
            % Contact a group''s administrators
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   Email - No description provided, Type: Email
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           emailSubject
            %           emailContent
            %
            % Responses:
            %   201: ok
            %   401: Login required.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              optionals.Email ebrains.collaboratory.models.Email
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:contactGroupAdmin:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","contactGroupAdmin")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/contactadministrator";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "emailSubject",...
                "emailContent",...
            ];
            if isfield(optionals,"Email")
              request.Body(1).Payload = optionals.Email.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("contactGroupAdmin", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("contactGroupAdmin", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:contactGroupAdmin:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","contactGroupAdmin",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % contactGroupAdmin method

        function [code, result, response] = createGroup(obj, optionals)
            % createGroup Create a group
            % Create a group
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   GroupForm - No description provided, Type: GroupForm
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           name
            %           title
            %           description
            %           acceptMembershipRequest
            %
            % Responses:
            %   201: Success.
            %   400: Incorrect parameters.
            %   401: Login required.
            %   403: You are not authorized to perform this action.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              optionals.GroupForm ebrains.collaboratory.models.GroupForm
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:createGroup:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","createGroup")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "name",...
                "title",...
                "description",...
                "acceptMembershipRequest",...
            ];
            if isfield(optionals,"GroupForm")
              request.Body(1).Payload = optionals.GroupForm.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("createGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("createGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:createGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","createGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % createGroup method

        function [code, result, response] = deleteGroup(obj, groupName)
            % deleteGroup Delete a group
            % Delete a group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   403: You must be an administrator of this group.
            %   401: Login required.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("deleteGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("deleteGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:deleteGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","deleteGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % deleteGroup method

        function [code, result, response] = getGroup(obj, groupName)
            % getGroup Get a group by its name
            % Get a group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %
            % Returns: Group
            %
            % See Also: ebrains.collaboratory.models.Group

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getGroup:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getGroup")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Group(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getGroup method

        function [code, result, response] = getGroupMembershipsByRole(obj, groupName, role)
            % getGroupMembershipsByRole List the users, units and groups in the specified role and Group
            % List the contents of the specified role in the specified Group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   404: Group not found.
            %
            % Returns: Membership
            %
            % See Also: ebrains.collaboratory.models.Membership

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getGroupMembershipsByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getGroupMembershipsByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getGroupMembershipsByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getGroupMembershipsByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Membership(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getGroupMembershipsByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getGroupMembershipsByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getGroupMembershipsByRole method

        function [code, result, response] = getGroupUnitsByRole(obj, groupName, role)
            % getGroupUnitsByRole List the units in the specified role and Group
            % List the units contained in the specified role in the specified Group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   404: Group not found.
            %
            % Returns: Array of Unit
            %
            % See Also: ebrains.collaboratory.models.Unit

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getGroupUnitsByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getGroupUnitsByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/units";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getGroupUnitsByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getGroupUnitsByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Unit(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getGroupUnitsByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getGroupUnitsByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getGroupUnitsByRole method

        function [code, result, response] = getGroupUsersByRole(obj, groupName, role)
            % getGroupUsersByRole List the users in the specified role and Group
            % List the users contained in the specified role in the specified Group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   404: Group not found.
            %
            % Returns: Membership
            %
            % See Also: ebrains.collaboratory.models.Membership

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getGroupUsersByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getGroupUsersByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/users";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getGroupUsersByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getGroupUsersByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Membership(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getGroupUsersByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getGroupUsersByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getGroupUsersByRole method

        function [code, result, response] = getGroupsByRole(obj, groupName, role)
            % getGroupsByRole List the groups in the specified role and Group
            % List the groups contained in the specified role in the specified Group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   404: Group not found.
            %
            % Returns: Array of Group
            %
            % See Also: ebrains.collaboratory.models.Group

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getGroupsByRole:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getGroupsByRole")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/groups";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getGroupsByRole", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getGroupsByRole", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Group(response.Body.Data);
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getGroupsByRole:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getGroupsByRole",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getGroupsByRole method

        function [code, result, response] = removeGroup(obj, groupName, role, groupToUnassignName)
            % removeGroup Remove a group from this group
            % Remove a group from the specified role in the specified group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %   groupToUnassignName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   403: You must be an administrator of this group.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
              groupToUnassignName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/groups/{groupToUnassignName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "groupToUnassignName" +"}") = groupToUnassignName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeGroup method

        function [code, result, response] = removeUnitFromGroup(obj, groupName, role, unitId)
            % removeUnitFromGroup Remove a unit from the group
            % Remove a unit from the specified role in the specified group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   400: Incorrect parameters.
            %   401: Login required.
            %   403: You must be an administrator of this group.
            %   404: Unit not found
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeUnitFromGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeUnitFromGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeUnitFromGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeUnitFromGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeUnitFromGroup method

        function [code, result, response] = removeUserFromGroup(obj, groupName, role, username)
            % removeUserFromGroup Remove a user from a group
            % Remove a user from the specified role in the specified group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %   role - No description provided, Type: string
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success.
            %   400: Incorrect parameters.
            %   401: Login required.
            %   403: You must be an administrator of this group.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              role string
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}/{role}/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;
            uri.Path(uri.Path == "{" + "role" +"}") = role;
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeUserFromGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeUserFromGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeUserFromGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeUserFromGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeUserFromGroup method

        function [code, result, response] = searchGroups(obj, optionals)
            % searchGroups Search groups by multiple criteria
            % Get the list of groups.
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   search - The keyword to be searched in titles and descriptions., Type: string
            %   acceptMembershipRequest - Result will return all groups if set to false (Default setting), or only those that accept membership requests if set to true., Type: logical
            %   username - Return only Groups that the single specified username is an administrator or a member of., Type: string
            %   role - List will return results on if you are a member or administrator depending on the role value provided, Type: string
            %
            % Responses:
            %   200: Success.
            %   401: Login required.
            %   404: Group not found.
            %
            % Returns: Array of Group
            %
            % See Also: ebrains.collaboratory.models.Group

            arguments
              obj ebrains.collaboratory.api.Group
              optionals.search string
              optionals.acceptMembershipRequest logical
              optionals.username string
              optionals.role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:searchGroups:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","searchGroups")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups";

            % No path parameters

            % Set query parameters
            if isfield(optionals, "search"), uri.Query(end+1) = matlab.net.QueryParameter("search", optionals.search); end
            if isfield(optionals, "acceptMembershipRequest"), uri.Query(end+1) = matlab.net.QueryParameter("acceptMembershipRequest", optionals.acceptMembershipRequest); end
            if isfield(optionals, "username"), uri.Query(end+1) = matlab.net.QueryParameter("username", optionals.username); end
            if isfield(optionals, "role"), uri.Query(end+1) = matlab.net.QueryParameter("role", optionals.role); end
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("searchGroups", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("searchGroups", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Group(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:searchGroups:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","searchGroups",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % searchGroups method

        function [code, result, response] = updateGroup(obj, groupName, optionals)
            % updateGroup Update a group
            % Update a group
            %
            % Required parameters:
            %   groupName - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   Group - No description provided, Type: Group
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           name
            %           title
            %           description
            %           acceptMembershipRequest
            %
            % Responses:
            %   201: Success.
            %   400: Incorrect parameters.
            %   401: Login required.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Group
              groupName string
              optionals.Group ebrains.collaboratory.models.Group
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:updateGroup:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","updateGroup")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "name",...
                "title",...
                "description",...
                "acceptMembershipRequest",...
            ];
            if isfield(optionals,"Group")
              request.Body(1).Payload = optionals.Group.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("updateGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("updateGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:updateGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","updateGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % updateGroup method

    end %methods
end %class


