classdef Client < ebrains.collaboratory.BaseClient
    % Client No description provided
    %
    % Client Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % Client Methods:
    %
    %   Client - Constructor
    %   createClient - Create a new OIDC Client
    %   deleteClient - 
    %   getClient - Get an existing OIDC Client
    %   getClients - Get list of OIDC clients owned by the requester.
    %   grandtOidcAccessToGroup - Grant access to a group for the targeted OIDC Client
    %   grantOidcAccessToUnit - Grant access to a group for the targeted OIDC Client
    %   removeOidcAccessForGroup - Remove a group from this collab
    %   removeOidcAccessFromUnit - Grant access to a group for the targeted OIDC Client
    %   updateClient - Update an existing OIDC Client
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, ebrains.collaboratory.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: 1.0
    % MATLAB Generator for OpenAPI version: 1.0.9
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = Client(options)
            % Client Constructor, creates a Client instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'ebrains.collaboratory.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = ebrains.collaboratory.api.Client();
            %
            %   % Create a client for alternative server/base URI
            %   client = ebrains.collaboratory.api.Client("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = ebrains.collaboratory.api.Client("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = ebrains.collaboratory.api.Client("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?ebrains.collaboratory.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@ebrains.collaboratory.BaseClient(args{:})
        end

        function [code, result, response] = createClient(obj, optionals)
            % createClient Create a new OIDC Client
            % Create a new OIDC Client
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   EbrainsClientRepresentation - No description provided, Type: EbrainsClientRepresentation
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           client
            %           owner
            %           maintainers
            %           accessDeniedToGuests
            %           featureAuthenticate
            %           featureAuthenticateIntValue
            %           guestPropertyIntValue
            %
            % Responses:
            %   201: created
            %   400: Bad parameter. See API response for details.
            %   401: Login required.
            %   409: An oidc client with that client id already exists.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Client
              optionals.EbrainsClientRepresentation ebrains.collaboratory.models.EbrainsClientRepresentation
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:createClient:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","createClient")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "client",...
                "owner",...
                "maintainers",...
                "accessDeniedToGuests",...
                "featureAuthenticate",...
                "featureAuthenticateIntValue",...
                "guestPropertyIntValue",...
            ];
            if isfield(optionals,"EbrainsClientRepresentation")
              request.Body(1).Payload = optionals.EbrainsClientRepresentation.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("createClient", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("createClient", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 409
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:createClient:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","createClient",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % createClient method

        function [code, result, response] = deleteClient(obj, clientId)
            % deleteClient No summary provided
            % No description provided
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   0: default response
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:deleteClient:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","deleteClient")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("deleteClient", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("deleteClient", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                otherwise % Default output as specified in spec
                    result = response.Body.Data;
            end
        
        end % deleteClient method

        function [code, result, response] = getClient(obj, clientId)
            % getClient Get an existing OIDC Client
            % Get an existing OIDC Client
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   401: Login required.
            %   403: You must be a member of this collab.
            %   404: OIDC Client not found.
            %
            % Returns: EbrainsClientRepresentationWithAccess
            %
            % See Also: ebrains.collaboratory.models.EbrainsClientRepresentationWithAccess

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getClient:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getClient")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getClient", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getClient", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.EbrainsClientRepresentationWithAccess(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getClient:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getClient",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getClient method

        function [code, result, response] = getClients(obj)
            % getClients Get list of OIDC clients owned by the requester.
            % Get list of OIDC clients owned by the requester, details of the client are not returned.
            %
            % No required parameters
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   401: Login required.
            %   403: You must be a member of this collab.
            %   404: OIDC Client not found.
            %
            % Returns: Array of EbrainsClientRepresentationItem
            %
            % See Also: ebrains.collaboratory.models.EbrainsClientRepresentationItem

            arguments
              obj ebrains.collaboratory.api.Client
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getClients:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getClients")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients";

            % No path parameters

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getClients", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getClients", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.EbrainsClientRepresentationItem(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getClients:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getClients",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getClients method

        function [code, result, response] = grandtOidcAccessToGroup(obj, clientId, groupName)
            % grandtOidcAccessToGroup Grant access to a group for the targeted OIDC Client
            % Grant access to a group for the targeted OIDC Client
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %   groupName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
              groupName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("grandtOidcAccessToGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("grandtOidcAccessToGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:grandtOidcAccessToGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","grandtOidcAccessToGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % grandtOidcAccessToGroup method

        function [code, result, response] = grantOidcAccessToUnit(obj, clientId, unitId)
            % grantOidcAccessToUnit Grant access to a group for the targeted OIDC Client
            % Grant access to a group for the targeted OIDC Client
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("grantOidcAccessToUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("grantOidcAccessToUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:grantOidcAccessToUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","grantOidcAccessToUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % grantOidcAccessToUnit method

        function [code, result, response] = removeOidcAccessForGroup(obj, clientId, groupName)
            % removeOidcAccessForGroup Remove a group from this collab
            % Remove a group from this collab
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %   groupName - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
              groupName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}/groups/{groupName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;
            uri.Path(uri.Path == "{" + "groupName" +"}") = groupName;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeOidcAccessForGroup", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeOidcAccessForGroup", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeOidcAccessForGroup:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeOidcAccessForGroup",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeOidcAccessForGroup method

        function [code, result, response] = removeOidcAccessFromUnit(obj, clientId, unitId)
            % removeOidcAccessFromUnit Grant access to a group for the targeted OIDC Client
            % Grant access to a group for the targeted OIDC Client
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required.
            %   403: You must be an administrator of this collab to perform this action.
            %   404: Group not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeOidcAccessFromUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeOidcAccessFromUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeOidcAccessFromUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeOidcAccessFromUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeOidcAccessFromUnit method

        function [code, result, response] = updateClient(obj, clientId, optionals)
            % updateClient Update an existing OIDC Client
            % Update an existing OIDC Client
            %
            % Required parameters:
            %   clientId - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   EbrainsClientRepresentation - No description provided, Type: EbrainsClientRepresentation
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           client
            %           owner
            %           maintainers
            %           accessDeniedToGuests
            %           featureAuthenticate
            %           featureAuthenticateIntValue
            %           guestPropertyIntValue
            %
            % Responses:
            %   200: success
            %   401: Login required.
            %   403: You must be a member of this collab.
            %   404: OIDC Client not found.
            %
            % Returns: EbrainsClientRepresentation
            %
            % See Also: ebrains.collaboratory.models.EbrainsClientRepresentation

            arguments
              obj ebrains.collaboratory.api.Client
              clientId string
              optionals.EbrainsClientRepresentation ebrains.collaboratory.models.EbrainsClientRepresentation
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:updateClient:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","updateClient")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/oidc/clients/{clientId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "clientId" +"}") = clientId;

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "client",...
                "owner",...
                "maintainers",...
                "accessDeniedToGuests",...
                "featureAuthenticate",...
                "featureAuthenticateIntValue",...
                "guestPropertyIntValue",...
            ];
            if isfield(optionals,"EbrainsClientRepresentation")
              request.Body(1).Payload = optionals.EbrainsClientRepresentation.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("updateClient", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("updateClient", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.EbrainsClientRepresentation(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:updateClient:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","updateClient",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % updateClient method

    end %methods
end %class


