classdef Idm < ebrains.collaboratory.BaseClient
    % Idm No description provided
    %
    % Idm Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % Idm Methods:
    %
    %   Idm - Constructor
    %   addUserToUnit - Add a user to a unit
    %   contactUnitAdmin - Send an email to a unit&#39;&#39;s administrators
    %   createGuestsUsers - Create a guest user
    %   findUsers - Search a user by username, first name, last name or email
    %   getUnit - Get the members of a Unit
    %   getUnitAdministrators - Get the administrators of a unit
    %   getUser - Get a user by username or sub
    %   getUserEmail - Get the email of a user
    %   getUserPlusExternalInfo - Get informations about your user from plus profile
    %   getUserPlusInfo - Get informations about your user from plus profile
    %   removeUserFromUnit - Remove a user from a unit
    %   searchUnits - Search for units by multiple criteria
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, ebrains.collaboratory.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: 1.0
    % MATLAB Generator for OpenAPI version: 1.0.9
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = Idm(options)
            % Idm Constructor, creates a Idm instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'ebrains.collaboratory.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = ebrains.collaboratory.api.Idm();
            %
            %   % Create a client for alternative server/base URI
            %   client = ebrains.collaboratory.api.Idm("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = ebrains.collaboratory.api.Idm("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = ebrains.collaboratory.api.Idm("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?ebrains.collaboratory.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@ebrains.collaboratory.BaseClient(args{:})
        end

        function [code, result, response] = addUserToUnit(obj, unitId, username)
            % addUserToUnit Add a user to a unit
            % Add a user to a unit
            %
            % Required parameters:
            %   unitId - No description provided, Type: string
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: Array of UnitDetail
            %
            % See Also: ebrains.collaboratory.models.UnitDetail

            arguments
              obj ebrains.collaboratory.api.Idm
              unitId string
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:addUserToUnit:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","addUserToUnit")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/units/{unitId}/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("addUserToUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("addUserToUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.UnitDetail(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:addUserToUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","addUserToUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % addUserToUnit method

        function [code, result, response] = contactUnitAdmin(obj, unitId, optionals)
            % contactUnitAdmin Send an email to a unit''s administrators
            % Contact a unit''s administrators
            %
            % Required parameters:
            %   unitId - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   Email - No description provided, Type: Email
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           emailSubject
            %           emailContent
            %
            % Responses:
            %   201: ok
            %   401: Login required
            %   404: Unit not found
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Idm
              unitId string
              optionals.Email ebrains.collaboratory.models.Email
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:contactUnitAdmin:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","contactUnitAdmin")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/units/{unitId}/contactadministrator";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "emailSubject",...
                "emailContent",...
            ];
            if isfield(optionals,"Email")
              request.Body(1).Payload = optionals.Email.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("contactUnitAdmin", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("contactUnitAdmin", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:contactUnitAdmin:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","contactUnitAdmin",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % contactUnitAdmin method

        function [code, result, response] = createGuestsUsers(obj, optionals)
            % createGuestsUsers Create a guest user
            % Create a list of guests user. Guests will have to use the reset password button to setup their password and login.
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   GuestUsersForm - No description provided, Type: GuestUsersForm
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           users
            %           expirationDate
            %
            % Responses:
            %   201: created
            %   400: Bad parameter. See API response for details.
            %   401: Login required
            %   403: You are not authorized to create guest users
            %
            % Returns: GuestUsersFormResponse
            %
            % See Also: ebrains.collaboratory.models.GuestUsersFormResponse

            arguments
              obj ebrains.collaboratory.api.Idm
              optionals.GuestUsersForm ebrains.collaboratory.models.GuestUsersForm
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:createGuestsUsers:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","createGuestsUsers")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:createGuestsUsers:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","createGuestsUsers")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/users/guests";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "users",...
                "expirationDate",...
            ];
            if isfield(optionals,"GuestUsersForm")
              request.Body(1).Payload = optionals.GuestUsersForm.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("createGuestsUsers", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("createGuestsUsers", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = ebrains.collaboratory.models.GuestUsersFormResponse(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:createGuestsUsers:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","createGuestsUsers",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % createGuestsUsers method

        function [code, result, response] = findUsers(obj, optionals)
            % findUsers Search a user by username, first name, last name or email
            % Search a user by username, first name, last name or email
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   search - No description provided, Type: string
            %   sub - No description provided, Type: string
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: Array of CollabUser
            %
            % See Also: ebrains.collaboratory.models.CollabUser

            arguments
              obj ebrains.collaboratory.api.Idm
              optionals.search string
              optionals.sub string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:findUsers:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","findUsers")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/users";

            % No path parameters

            % Set query parameters
            if isfield(optionals, "search"), uri.Query(end+1) = matlab.net.QueryParameter("search", optionals.search); end
            if isfield(optionals, "sub"), uri.Query(end+1) = matlab.net.QueryParameter("sub", optionals.sub); end
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("findUsers", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("findUsers", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabUser(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:findUsers:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","findUsers",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % findUsers method

        function [code, result, response] = getUnit(obj, unitId, optionals)
            % getUnit Get the members of a Unit
            % Get the members directly assigned to a Unit. Only admin can use the flatList = True value
            %
            % Required parameters:
            %   unitId - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   flatList - if True, return users of this Unit and all its leaf-side units. Else return users only of this unit, Type: logical
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: UnitDetail
            %
            % See Also: ebrains.collaboratory.models.UnitDetail

            arguments
              obj ebrains.collaboratory.api.Idm
              unitId string
              optionals.flatList logical
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUnit:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUnit")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/units/{unitId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % Set query parameters
            if isfield(optionals, "flatList"), uri.Query(end+1) = matlab.net.QueryParameter("flatList", optionals.flatList); end
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.UnitDetail(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUnit method

        function [code, result, response] = getUnitAdministrators(obj, unitId)
            % getUnitAdministrators Get the administrators of a unit
            % Get the administrators of a Unit
            %
            % Required parameters:
            %   unitId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: Membership
            %
            % See Also: ebrains.collaboratory.models.Membership

            arguments
              obj ebrains.collaboratory.api.Idm
              unitId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUnitAdministrators:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUnitAdministrators")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/units/{unitId}/administrator";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUnitAdministrators", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUnitAdministrators", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Membership(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUnitAdministrators:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUnitAdministrators",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUnitAdministrators method

        function [code, result, response] = getUser(obj, username)
            % getUser Get a user by username or sub
            % Get a user by username or iam sub, units and groups of the user are not returned in this API.
            %
            % Required parameters:
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: CollabUserDetail
            %
            % See Also: ebrains.collaboratory.models.CollabUserDetail

            arguments
              obj ebrains.collaboratory.api.Idm
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUser:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUser")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUser", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUser", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabUserDetail(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUser:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUser",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUser method

        function [code, result, response] = getUserEmail(obj, username)
            % getUserEmail Get the email of a user
            % Get the email of a user, this API is accessible only through for authorized users.
            %
            % Required parameters:
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Idm
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "text/plain", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUserEmail:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUserEmail")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/users/{username}/email";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUserEmail", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUserEmail", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUserEmail:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUserEmail",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUserEmail method

        function [code, result, response] = getUserPlusExternalInfo(obj, username)
            % getUserPlusExternalInfo Get informations about your user from plus profile
            % Get information about a user from plus external profile, only accept username, you can''t access plus profile of an other user than yourself
            %
            % Required parameters:
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   403: This API doesn''t allow you to check plus profile of other users.
            %   401: Login required
            %   404: Plus profile not found for this user.
            %
            % Returns: CollabUserDetail
            %
            % See Also: ebrains.collaboratory.models.CollabUserDetail

            arguments
              obj ebrains.collaboratory.api.Idm
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUserPlusExternalInfo:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUserPlusExternalInfo")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/users/{username}/plus-external";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUserPlusExternalInfo", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUserPlusExternalInfo", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabUserDetail(response.Body.Data);
                case 403
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUserPlusExternalInfo:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUserPlusExternalInfo",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUserPlusExternalInfo method

        function [code, result, response] = getUserPlusInfo(obj, username)
            % getUserPlusInfo Get informations about your user from plus profile
            % Get information about a user from plus profile, only accept username, you can''t access plus profile of an other user than yourself
            %
            % Required parameters:
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: success
            %   403: This API doesn''t allow you to check plus profile of other users.
            %   401: Login required
            %   404: Plus profile not found for this user.
            %
            % Returns: CollabUserDetail
            %
            % See Also: ebrains.collaboratory.models.CollabUserDetail

            arguments
              obj ebrains.collaboratory.api.Idm
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getUserPlusInfo:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getUserPlusInfo")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/users/{username}/plus";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getUserPlusInfo", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getUserPlusInfo", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabUserDetail(response.Body.Data);
                case 403
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getUserPlusInfo:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getUserPlusInfo",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getUserPlusInfo method

        function [code, result, response] = removeUserFromUnit(obj, unitId, username)
            % removeUserFromUnit Remove a user from a unit
            % Remove a user from a unit
            %
            % Required parameters:
            %   unitId - No description provided, Type: string
            %   username - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   204: Success.
            %   401: Login required
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Idm
              unitId string
              username string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/units/{unitId}/users/{username}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "unitId" +"}") = unitId;
            uri.Path(uri.Path == "{" + "username" +"}") = username;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("removeUserFromUnit", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("removeUserFromUnit", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 204
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:removeUserFromUnit:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","removeUserFromUnit",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % removeUserFromUnit method

        function [code, result, response] = searchUnits(obj, optionals)
            % searchUnits Search for units by multiple criteria
            % Search for units by multiple criteria
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   search - A keyword to search for in the Units'' titles or descriptions, Type: string
            %   username - Only show Units that username is a member or administrator of, depending on specified role, Type: string
            %   acceptMembershipRequest - Result will return all units if set to false (Default setting), or only those that accept membership requests if set to true, Type: logical
            %   role - Specifies which role to search username in, Type: string
            %
            % Responses:
            %   200: success
            %   401: Login required
            %
            % Returns: Array of Unit
            %
            % See Also: ebrains.collaboratory.models.Unit

            arguments
              obj ebrains.collaboratory.api.Idm
              optionals.search string
              optionals.username string
              optionals.acceptMembershipRequest logical
              optionals.role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:searchUnits:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","searchUnits")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/identity/units";

            % No path parameters

            % Set query parameters
            if isfield(optionals, "search"), uri.Query(end+1) = matlab.net.QueryParameter("search", optionals.search); end
            if isfield(optionals, "username"), uri.Query(end+1) = matlab.net.QueryParameter("username", optionals.username); end
            if isfield(optionals, "acceptMembershipRequest"), uri.Query(end+1) = matlab.net.QueryParameter("acceptMembershipRequest", optionals.acceptMembershipRequest); end
            if isfield(optionals, "role"), uri.Query(end+1) = matlab.net.QueryParameter("role", optionals.role); end
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("searchUnits", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("searchUnits", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.Unit(response.Body.Data);
                case 401
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:searchUnits:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","searchUnits",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % searchUnits method

    end %methods
end %class


