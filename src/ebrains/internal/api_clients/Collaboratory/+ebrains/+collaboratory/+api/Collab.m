classdef Collab < ebrains.collaboratory.BaseClient
    % Collab No description provided
    %
    % Collab Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % Collab Methods:
    %
    %   Collab - Constructor
    %   contactCollabAdmin - Send an email to a collab&#39;&#39;s administrators
    %   createCollab - Create a new Collab
    %   deleteCollab - Delete an existing collab
    %   generateInviteLink - 
    %   getCollab - Get the metadata of an existing collab determined by its collab ID
    %   joinCollab - 
    %   searchCollab - Get a list of collabs matching the search criteria. Some of the search criteria are mutually exclusive.
    %   updateCollab - Update an existing collab
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, ebrains.collaboratory.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: 1.0
    % MATLAB Generator for OpenAPI version: 1.0.9
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = Collab(options)
            % Collab Constructor, creates a Collab instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'ebrains.collaboratory.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = ebrains.collaboratory.api.Collab();
            %
            %   % Create a client for alternative server/base URI
            %   client = ebrains.collaboratory.api.Collab("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = ebrains.collaboratory.api.Collab("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = ebrains.collaboratory.api.Collab("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?ebrains.collaboratory.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@ebrains.collaboratory.BaseClient(args{:})
        end

        function [code, result, response] = contactCollabAdmin(obj, collabId, optionals)
            % contactCollabAdmin Send an email to a collab''s administrators
            % Contact a collab''s administrators
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   Email - No description provided, Type: Email
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           emailSubject
            %           emailContent
            %
            % Responses:
            %   201: ok
            %   401: Login required
            %   404: The specified collab was not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Collab
              collabId string
              optionals.Email ebrains.collaboratory.models.Email
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:contactCollabAdmin:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","contactCollabAdmin")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}/contactadministrator";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "emailSubject",...
                "emailContent",...
            ];
            if isfield(optionals,"Email")
              request.Body(1).Payload = optionals.Email.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("contactCollabAdmin", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("contactCollabAdmin", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:contactCollabAdmin:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","contactCollabAdmin",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % contactCollabAdmin method

        function [code, result, response] = createCollab(obj, optionals)
            % createCollab Create a new Collab
            % Create a new Collab
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   CollabForm - No description provided, Type: CollabForm
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           name
            %           title
            %           description
            %           drive
            %           chat
            %           public
            %
            % Responses:
            %   201: Created
            %   400: Bad parameter. See API response for details.
            %   401: Login required
            %   409: A collab with that name already exists.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Collab
              optionals.CollabForm ebrains.collaboratory.models.CollabForm
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:createCollab:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","createCollab")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "name",...
                "title",...
                "description",...
                "drive",...
                "chat",...
                "public",...
            ];
            if isfield(optionals,"CollabForm")
              request.Body(1).Payload = optionals.CollabForm.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("createCollab", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("createCollab", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 409
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:createCollab:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","createCollab",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % createCollab method

        function [code, result, response] = deleteCollab(obj, collabId)
            % deleteCollab Delete an existing collab
            % Delete an existing collab
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Updated
            %   400: Bad parameter. See API response for details.
            %   401: Login required
            %   404: The specified collab was not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Collab
              collabId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("deleteCollab", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("deleteCollab", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:deleteCollab:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","deleteCollab",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % deleteCollab method

        function [code, result, response] = generateInviteLink(obj, collabId, role)
            % generateInviteLink No summary provided
            % Generate an invite link for a specific Collab and a specific Role
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %   role - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   201: Created
            %   401: Login required
            %   404: The specified collab was not found.
            %
            % Returns: InviteLinkRequest
            %
            % See Also: ebrains.collaboratory.models.InviteLinkRequest

            arguments
              obj ebrains.collaboratory.api.Collab
              collabId string
              role string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:generateInviteLink:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","generateInviteLink")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/invite/{collabId}/role/{role}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;
            uri.Path(uri.Path == "{" + "role" +"}") = role;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("generateInviteLink", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("generateInviteLink", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 201
                    result = ebrains.collaboratory.models.InviteLinkRequest(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:generateInviteLink:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","generateInviteLink",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % generateInviteLink method

        function [code, result, response] = getCollab(obj, collabId)
            % getCollab Get the metadata of an existing collab determined by its collab ID
            % Get an existing collab''s metadata
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success
            %   401: Login required
            %   403: You must be a member of this collab to perform this action.
            %   404: The specified collab was not found.
            %
            % Returns: CollabSearchResult
            %
            % See Also: ebrains.collaboratory.models.CollabSearchResult

            arguments
              obj ebrains.collaboratory.api.Collab
              collabId string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:getCollab:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","getCollab")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("getCollab", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("getCollab", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabSearchResult(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:getCollab:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","getCollab",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % getCollab method

        function [code, result, response] = joinCollab(obj, token)
            % joinCollab No summary provided
            % Join a collab with invite link
            %
            % Required parameters:
            %   token - No description provided, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: Success
            %   401: Login required
            %   404: The specified collab was not found.
            %
            % Returns: JoinCollabResponse
            %
            % See Also: ebrains.collaboratory.models.JoinCollabResponse

            arguments
              obj ebrains.collaboratory.api.Collab
              token string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:joinCollab:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","joinCollab")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/invite/{token}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "token" +"}") = token;

            % No query parameters
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("joinCollab", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("joinCollab", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.JoinCollabResponse(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:joinCollab:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","joinCollab",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % joinCollab method

        function [code, result, response] = searchCollab(obj, optionals)
            % searchCollab Get a list of collabs matching the search criteria. Some of the search criteria are mutually exclusive.
            % Get a list of collabs matching the search criteria
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   search - The keyword to be searched in titles and descriptions., Type: string
            %   driveId - Search a collab by its DriveId. If present, other parameters are ignored. This returns either a single result or an HTTP status 404 ''not found''., Type: string
            %   collabTitle - Search a collab by its title. If present, other parameters are ignored. This returns either a single result or an HTTP status 404 ''not found''., Type: string
            %   limit - The number of results per page (no limit by default), Type: int32, Format: int32
            %   offset - Retrieve the results starting from the specified number.., Type: int32, Format: int32
            %   orderField - The results will be ordered according to field specified., Type: string
            %   order - Whether the ordering should be done ascending or descending, Type: string
            %   favorite - Retrieve collabs favorited by the user. If present, other parameters are ignored, Type: logical
            %   memberOnly - Show only collabs in which the user is a member, Type: logical
            %   roles - Show only collabs for which the user has the given role of administrator, editor or viewer.  Multiple roles can be passed separated by a +. If not provided it will include all the roles, Type: string
            %   visibility - Show only collabs which are set to a given visibility of private or public. If not provided, it will return collabs independently of their public or private visibility., Type: string
            %
            % Responses:
            %   200: Success
            %
            % Returns: Array of CollabSearchResult
            %
            % See Also: ebrains.collaboratory.models.CollabSearchResult

            arguments
              obj ebrains.collaboratory.api.Collab
              optionals.search string
              optionals.driveId string
              optionals.collabTitle string
              optionals.limit int32
              optionals.offset int32
              optionals.orderField string { mustBeMember(optionals.orderField,["title","createDate","mostLiked"]) }
              optionals.order string { mustBeMember(optionals.order,["asc","desc"]) }
              optionals.favorite logical
              optionals.memberOnly logical
              optionals.roles string { mustBeMember(optionals.roles,["viewer","editor","administrator"]) }
              optionals.visibility string { mustBeMember(optionals.visibility,["public","private"]) }
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("ebrains:collaboratory:api:searchCollab:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","searchCollab")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs";

            % No path parameters

            % Set query parameters
            if isfield(optionals, "search"), uri.Query(end+1) = matlab.net.QueryParameter("search", optionals.search); end
            if isfield(optionals, "driveId"), uri.Query(end+1) = matlab.net.QueryParameter("driveId", optionals.driveId); end
            if isfield(optionals, "collabTitle"), uri.Query(end+1) = matlab.net.QueryParameter("collabTitle", optionals.collabTitle); end
            if isfield(optionals, "limit"), uri.Query(end+1) = matlab.net.QueryParameter("limit", optionals.limit); end
            if isfield(optionals, "offset"), uri.Query(end+1) = matlab.net.QueryParameter("offset", optionals.offset); end
            if isfield(optionals, "orderField"), uri.Query(end+1) = matlab.net.QueryParameter("orderField", optionals.orderField); end
            if isfield(optionals, "order"), uri.Query(end+1) = matlab.net.QueryParameter("order", optionals.order); end
            if isfield(optionals, "favorite"), uri.Query(end+1) = matlab.net.QueryParameter("favorite", optionals.favorite); end
            if isfield(optionals, "memberOnly"), uri.Query(end+1) = matlab.net.QueryParameter("memberOnly", optionals.memberOnly); end
            if isfield(optionals, "roles"), uri.Query(end+1) = matlab.net.QueryParameter("roles", optionals.roles); end
            if isfield(optionals, "visibility"), uri.Query(end+1) = matlab.net.QueryParameter("visibility", optionals.visibility); end
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("searchCollab", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("searchCollab", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = ebrains.collaboratory.models.CollabSearchResult(response.Body.Data);
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:searchCollab:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","searchCollab",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % searchCollab method

        function [code, result, response] = updateCollab(obj, collabId, optionals)
            % updateCollab Update an existing collab
            % Update an existing collab
            %
            % Required parameters:
            %   collabId - No description provided, Type: string
            %
            % Optional name-value parameters:
            %   CollabForm - No description provided, Type: CollabForm
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           name
            %           title
            %           description
            %           drive
            %           chat
            %           public
            %
            % Responses:
            %   200: Updated
            %   400: Bad parameter. See API response for details.
            %   401: Login required
            %   404: The specified collab was not found.
            %
            % Returns: 
            %
            % See Also: ebrains.collaboratory.models.

            arguments
              obj ebrains.collaboratory.api.Collab
              collabId string
              optionals.CollabForm ebrains.collaboratory.models.CollabForm
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % No return content type specified, defaulting to JSON
            request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("ebrains:collaboratory:api:updateCollab:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","updateCollab")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://wiki.ebrains.eu/rest");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/collabs/{collabId}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "collabId" +"}") = collabId;

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "name",...
                "title",...
                "description",...
                "drive",...
                "chat",...
                "public",...
            ];
            if isfield(optionals,"CollabForm")
              request.Body(1).Payload = optionals.CollabForm.getPayload(requiredProperties,optionalProperties);
            else
              request.Body(1).Payload = "{}";
            end

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("updateCollab", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("updateCollab", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("ebrains:collaboratory:api:updateCollab:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","updateCollab",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % updateCollab method

    end %methods
end %class


